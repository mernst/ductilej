TypelessJ TODO
--------------

Detyper
- Need to determine whether a method with an implicit receiver is a static or
  not (might be statically imported, yay!)
- Need to determine what happens when we see a normal static method invocation
  (Foo.bar())
- Implement signature mangling
- Transform constructor invocations (JCNewClass)
- Extract main() detection into ASTUtil, make it correct
- Record original type information when transforming JCVariableDecl, somehow
pass that along to all runtime methods so that they can provide better feedback
- Record original type information when transforming JCMethodDecl and store
that in annotations preserved at runtime for use by RT.invoke()

Runtime
- Implement RT.compare()
- Finish implementation of RT.op()
- Make use of type information everywhere possible to validate types before
calling typed library methods (transformed methods as well)
